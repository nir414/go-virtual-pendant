{
    // * VS Code 통합 디버깅 설정 파일
    // NOTE: 다양한 언어와 플랫폼을 지원하는 범용 디버깅 환경
    // 🎯 목표: Go, JavaScript, Chrome, Node.js 등 멀티 스택 프로젝트 지원
    // 🔧 특징: 기존 코드 스타일 보존, 최소한의 변경, 높은 호환성
    "version": "0.2.0",
    "configurations": [
        {
            // * 기본 개발 모드 - 빠른 개발 및 테스트용
            // 🎯 용도: 일반적인 개발 작업, 코드 스타일 보존 우선
            "name": "🚀 Launch Package",
            "type": "go",
            "request": "launch",
            "mode": "auto",
            "program": "${workspaceFolder}/cmd/server",
            "cwd": "${workspaceFolder}",
            "env": {
                "GO_ENV": "development"
            },
            "args": [],
            "showLog": true,
            "trace": "verbose",
            "logOutput": "rpc"
        },
        {
            // * 디버깅 전용 모드 - 상세한 디버깅 정보와 함께
            // ⚠️ 주의: 기존 코드 구조 변경 최소화, 성능보다 안정성 우선
            "name": "🔧 Debug Mode",
            "type": "go",
            "request": "launch",
            "mode": "debug",
            "program": "${workspaceFolder}/cmd/server",
            "cwd": "${workspaceFolder}",
            "env": {
                "GO_ENV": "debug",
                "DEBUG_MODE": "true"
            },
            "args": [],
            "showLog": true,
            "console": "integratedTerminal",
            "trace": "verbose"
        },
        {
            // * 테스트 모드 - 로봇 없이 목업 데이터로 테스트
            // NOTE: 실제 로봇 연결 없이 UI 및 기능 테스트 가능
            // ? 로봇 하드웨어 없이도 개발 가능하도록 설계
            "name": "🧪 Test Mode",
            "type": "go",
            "request": "launch",
            "mode": "debug",
            "program": "${workspaceFolder}/cmd/server",
            "cwd": "${workspaceFolder}",
            "env": {
                "GO_ENV": "test",
                "MOCK_MODE": "true"
            },
            "args": [],
            "showLog": true,
            "console": "integratedTerminal"
        },
        {
            // * 프로덕션 빌드 모드 - 최적화된 실행파일로 실행
            // NOTE: 실제 배포 환경과 유사한 조건에서 테스트
            // ! 빌드 시간이 오래 걸릴 수 있음
            "name": "📦 Build and Run",
            "type": "go",
            "request": "launch",
            "mode": "exec",
            "program": "${workspaceFolder}/build/go-virtual-pendant.exe",
            "preLaunchTask": "🏗️ Go Build",
            "env": {
                "GO_ENV": "production"
            },
            "console": "integratedTerminal"
        },
        {
            // * 현재 파일만 실행 - 개별 파일 테스트용
            // NOTE: 특정 기능이나 함수만 빠르게 테스트할 때 사용
            // ? 전체 프로젝트가 아닌 단일 파일 실행
            "name": "🧩 Run Current File",
            "type": "go",
            "request": "launch",
            "mode": "auto",
            "program": "${file}",
            "env": {
                "GO_ENV": "development"
            },
            "console": "integratedTerminal"
        },
        {
            // * 실행 중인 프로세스에 디버거 연결
            // NOTE: 이미 실행 중인 서버에 디버거를 붙일 때 사용
            // ! processId를 실행 시 설정해야 함
            "name": "📄 Attach to Process",
            "type": "go",
            "request": "attach",
            "mode": "local",
            "processId": 0
        },
        {
            // * JavaScript/웹 디버깅 - 브라우저 연동
            // 🎯 목적: 기존 코드 스타일 유지하면서 디버깅 지원
            // 🔧 특징: 과도한 주석 추가 금지, 깔끔한 코드 보존
            "name": "🌐 Debug JavaScript in Chrome",
            "type": "chrome",
            "request": "launch",
            "url": "http://localhost:8082",
            "webRoot": "${workspaceFolder}/web",
            "sourceMaps": true,
            "smartStep": true,
            "skipFiles": [
                "<node_internals>/**"
            ],
            "runtimeArgs": [
                "--disable-web-security",
                "--disable-features=VizDisplayCompositor"
            ]
        },
        {
            // * 브라우저 연결 디버깅 - 실행 중인 Chrome에 연결
            // 🎯 원칙: 코드 간결성 유지, 불필요한 설명 주석 최소화
            "name": "🔗 Attach to Chrome",
            "type": "chrome",
            "request": "attach",
            "port": 9222,
            "webRoot": "${workspaceFolder}/web",
            "sourceMaps": true
        }
    ]
}